{"ast":null,"code":"import { getNoParam, getParam, postParam } from '../../api/test';\nexport default {\n  name: \"dashboard\",\n  data() {\n    return {\n      // sentiment\n      options: [{\n        options: [{\n          value: 'all',\n          label: 'All'\n        }]\n      }, {\n        options: [{\n          value: 'positive',\n          label: 'Positive'\n        }, {\n          value: 'neutral',\n          label: 'Neutral'\n        }, {\n          value: 'negative',\n          label: 'Negative'\n        }]\n      }],\n      sentiment: 'all',\n      //time\n      time: [70, 100],\n      marks: {\n        0: 'GPT-1',\n        8: 'GPT-2',\n        37: 'GPT-3',\n        50: 'GPTNeo',\n        70: {\n          style: {\n            color: '#1989FA'\n          },\n          label: this.$createElement('strong', 'GPT-3.5')\n        },\n        90: {\n          style: {\n            color: '#1989FA'\n          },\n          label: this.$createElement('strong', 'GPT-4')\n        }\n      },\n      //figure\n      primary: 500000,\n      secondary: 30000,\n      college: 200000,\n      total: 10000000,\n      //chart\n      chart: null,\n      chartData: [5, 20, 36, 10, 10, 20]\n    };\n  },\n  mounted() {\n    this.chart = echarts.init(this.$refs.chart);\n    this.updateChart();\n  },\n  methods: {\n    handleClick() {\n      // getNoParam().then((res) => {\n      // res就是返回结果\n      // 所有的处理都在这里进行\n      // })\n\n      // 前面的name对应的是后端实体类的属性，后面的'name'对应的是想要传递到后端到值\n      // postParam({name: this.value, age: 12}).then((res) => {\n      //   this.method2()\n      // })\n    },\n    method2() {\n      this.$message({\n        type: 'warning',\n        message: \"测试warning的格式\"\n      });\n    },\n    updateChart() {\n      this.chart.setOption({\n        xAxis: {\n          type: 'category',\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: this.chartData,\n          type: 'line'\n        }]\n      });\n    }\n  }\n};","map":{"version":3,"names":["getNoParam","getParam","postParam","name","data","options","value","label","sentiment","time","marks","style","color","$createElement","primary","secondary","college","total","chart","chartData","mounted","echarts","init","$refs","updateChart","methods","handleClick","method2","$message","type","message","setOption","xAxis","yAxis","series"],"sources":["src/views/dashboard/GDashboard.vue"],"sourcesContent":["<template>\n    <div id=\"app\">  \n        <!-- 1. filter -->\n        <div class=\"filter\">\n                <div class=\"sentiment\"> \n                    <div class=\"senlabel\"> Sentiment:</div>\n                    <el-select v-model=\"sentiment\" :change=\"handleClick()\">\n                        <el-option-group\n                            v-for=\"group in options\"\n                            :key=\"group.label\"\n                            :label=\"group.label\">\n                            <el-option\n                                v-for=\"item in group.options\"\n                                :key=\"item.value\"\n                                :label=\"item.label\"\n                                :value=\"item.value\">\n                            </el-option>\n                        </el-option-group>\n                    </el-select>\n                </div>\n            <div class=\"time\">\n                 <el-slider :change=\"handleClick()\"\n                    v-model=\"time\"\n                    range\n                    :marks=\"marks\">\n                </el-slider>\n            </div>\n            \n        </div>\n        <!-- 2. display directly data -->\n        <div class=\"figure\">\n            <div class=\"f\">\n                <div class=\"ftitle\">Primary School:</div>\n                <div class=\"fdata\">{{primary}}</div>\n            </div>\n            <div class=\"f\">\n                <div class=\"ftitle\">Secondary School:</div>\n                <div class=\"fdata\">{{secondary}}</div>\n            </div>\n            <div class=\"f\">\n                <div class=\"ftitle\">College:</div>\n                <div class=\"fdata\">{{college}}</div>\n            </div>\n            <div class=\"f\">\n                <div class=\"ftitle\">Total:</div>\n                <div class=\"fdata\">{{total}}</div>\n            </div>\n        </div>\n        <!-- 3. figure-->\n        <div class=\"chart\">\n            <div class=\"c\" id=\"test\" ref=\"chart\"></div>\n            <div class=\"c\"></div>\n        </div>\n    </div>\n   \n    \n</template>\n<script>\nimport { getNoParam, getParam, postParam } from '../../api/test'\n\nexport default {\n  name: \"dashboard\",\n\n  data() {\n      return {\n        // sentiment\n        options: [\n       {\n          options: [{\n            value: 'all',\n            label: 'All'\n          }]\n        },\n        {\n          options: [\n            {\n              value: 'positive',\n              label: 'Positive'\n            },\n            {\n              value: 'neutral',\n              label: 'Neutral'\n            },\n            {\n              value: 'negative',\n              label: 'Negative'\n            }\n          ]\n        }\n      ],\n        sentiment: 'all',\n        //time\n        time: [70, 100],\n        marks: {\n          0: 'GPT-1',\n          8: 'GPT-2',\n          37: 'GPT-3',\n          50: 'GPTNeo',\n          70: {\n            style: {\n              color: '#1989FA'\n            },\n            label: this.$createElement('strong', 'GPT-3.5')\n          },\n          90:{\n            style: {\n              color: '#1989FA'\n            },\n            label: this.$createElement('strong', 'GPT-4')\n          }\n        },\n        //figure\n        primary: 500000,\n        secondary: 30000,\n        college: 200000,\n        total: 10000000,\n        //chart\n        chart: null,\n        chartData: [5, 20, 36, 10, 10, 20]\n\n      }\n    },\n\n  mounted() {\n    this.chart = echarts.init(this.$refs.chart);\n    this.updateChart();\n  },\n\n  methods: {\n    handleClick() {\n      // getNoParam().then((res) => {\n        // res就是返回结果\n        // 所有的处理都在这里进行\n      // })\n\n      // 前面的name对应的是后端实体类的属性，后面的'name'对应的是想要传递到后端到值\n      // postParam({name: this.value, age: 12}).then((res) => {\n        //   this.method2()\n      // })\n    },\n    method2() {\n      this.$message({type: 'warning', message: \"测试warning的格式\"})\n    },\n    updateChart() {\n            this.chart.setOption({\n                xAxis: {\n                    type: 'category',\n                    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n                },\n                yAxis: {\n                    type: 'value',\n                },\n                series: [\n                    {\n                        data: this.chartData,\n                        type: 'line',\n                    },\n                ],\n            });\n        },\n  },\n};\n</script>\n<style>\n    #app{\n        display:flex;\n        flex-direction: column;\n        background-color: #3e3e3e;\n    }\n    .filter{\n        flex:1;\n        display: flex;\n        padding-block: 10px 10px ;\n        padding-left: 150px;\n        padding-right:150px;\n\n    }\n    .filter .sentiment{\n        flex: 3;\n        margin-right: 10px;\n        display: flex;\n        align-items: center;\n \n    }\n    .filter .sentiment .senlabel{\n        font-weight:bold;\n        margin-right: 30px;\n        color: #409EFF;\n    }\n    .filter .time{\n        flex: 6;\n        margin-left:10px;\n        text-align: center;\n        margin: auto;\n    }\n\n    .figure{\n        flex: 2;\n        padding-left: 150px;\n        padding-right:150px;\n        display: flex;\n    }\n    .figure .f{\n        flex: 1;\n        margin: 2%;\n        background-color: #fff;\n        display: flex;\n        flex-direction: column;\n    }\n    .figure .f .ftitle{\n        flex: 2;\n        font-weight: 500;\n        font-size: 23px;\n        margin-left:30px;\n        display: flex;\n        align-items:flex-end;\n\n    }\n    .figure .f .fdata{\n        flex: 3;\n        display:flex;\n        justify-content: center;\n        align-items: center;\n        font-size: 40px;\n        font-weight: 600;\n        color: #409EFF;\n    }\n    .chart{\n        flex:4;\n        padding-left: 150px;\n        padding-right:150px;\n        display: flex;\n    }\n    .chart .c{\n        flex: 1;\n        margin: 2%;\n        background-color: #fff;\n    }\n    #test{\n        background-color: pink;\n    }\n</style>\n\n"],"mappings":"AA0DA,SAAAA,UAAA,EAAAC,QAAA,EAAAC,SAAA;AAEA;EACAC,IAAA;EAEAC,KAAA;IACA;MACA;MACAC,OAAA,GACA;QACAA,OAAA;UACAC,KAAA;UACAC,KAAA;QACA;MACA,GACA;QACAF,OAAA,GACA;UACAC,KAAA;UACAC,KAAA;QACA,GACA;UACAD,KAAA;UACAC,KAAA;QACA,GACA;UACAD,KAAA;UACAC,KAAA;QACA;MAEA,EACA;MACAC,SAAA;MACA;MACAC,IAAA;MACAC,KAAA;QACA;QACA;QACA;QACA;QACA;UACAC,KAAA;YACAC,KAAA;UACA;UACAL,KAAA,OAAAM,cAAA;QACA;QACA;UACAF,KAAA;YACAC,KAAA;UACA;UACAL,KAAA,OAAAM,cAAA;QACA;MACA;MACA;MACAC,OAAA;MACAC,SAAA;MACAC,OAAA;MACAC,KAAA;MACA;MACAC,KAAA;MACAC,SAAA;IAEA;EACA;EAEAC,QAAA;IACA,KAAAF,KAAA,GAAAG,OAAA,CAAAC,IAAA,MAAAC,KAAA,CAAAL,KAAA;IACA,KAAAM,WAAA;EACA;EAEAC,OAAA;IACAC,YAAA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;IAAA,CACA;IACAC,QAAA;MACA,KAAAC,QAAA;QAAAC,IAAA;QAAAC,OAAA;MAAA;IACA;IACAN,YAAA;MACA,KAAAN,KAAA,CAAAa,SAAA;QACAC,KAAA;UACAH,IAAA;UACAzB,IAAA;QACA;QACA6B,KAAA;UACAJ,IAAA;QACA;QACAK,MAAA,GACA;UACA9B,IAAA,OAAAe,SAAA;UACAU,IAAA;QACA;MAEA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}