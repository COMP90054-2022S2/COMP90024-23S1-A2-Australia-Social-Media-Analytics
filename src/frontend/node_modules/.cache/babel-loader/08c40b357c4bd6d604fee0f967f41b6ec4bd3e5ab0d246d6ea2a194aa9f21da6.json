{"ast":null,"code":"import echarts from 'echarts';\nimport { getNoParam, getParam, postParam } from '../../api/test';\nexport default {\n  name: \"distribution\",\n  data() {\n    return {\n      //table1 data\n      tableData1: [{\n        electorate: 'Eleborate1',\n        party1: 'LP',\n        party2: 'ALP',\n        vote: '56%',\n        sentiment: 76\n      }, {\n        electorate: 'Eleborate2',\n        party1: 'LP',\n        party2: 'GRN',\n        vote: '76%',\n        sentiment: 34\n      }, {\n        electorate: 'Eleborate3',\n        party1: 'IND',\n        party2: 'ALP',\n        vote: '45%',\n        sentiment: -34\n      }, {\n        electorate: 'Eleborate4',\n        party1: 'XEN',\n        party2: 'NP',\n        vote: '78%',\n        sentiment: 5\n      }, {\n        electorate: 'Eleborate5',\n        party1: 'KAP',\n        party2: 'LNP',\n        vote: '67%',\n        sentiment: -89\n      }]\n\n      //table2 data\n    };\n  },\n\n  mounted() {},\n  methods: {\n    handleClick() {\n      this.updateData();\n    },\n    updateData() {\n      if (this.sentiment === 'positive') {\n        this.primary = 800, this.secondary = 1000, this.college = 300, this.total = 800000;\n      } else {\n        this.primary = 2800, this.secondary = 31000, this.college = 5300, this.total = 8300000;\n      }\n    }\n  }\n};","map":{"version":3,"names":["echarts","getNoParam","getParam","postParam","name","data","tableData1","electorate","party1","party2","vote","sentiment","mounted","methods","handleClick","updateData","primary","secondary","college","total"],"sources":["src/views/dashboard/Ranking.vue"],"sourcesContent":["<template>\n    <div id=\"app\">  \n      <el-col :span=\"4\">\n         <el-menu \n            default-active=\"ranking\"\n            class=\"el-menu-vertical-demo\"\n            background-color=\"#333\"\n            text-color=\"#fff\"\n            active-text-color=\"#ffd04b\">\n            <el-menu-item index=\"distribution\">\n              <span slot=\"title\">Distribution</span>\n            </el-menu-item>\n            <el-menu-item index=\"ranking\">\n              <span slot=\"title\">Ranking</span>\n            </el-menu-item>\n          </el-menu>\n      </el-col>\n      <el-col :span=\"20\" class=\"chart\">\n        <el-row class=\"scatter1\">\n          <!-- figure1 -->\n          <el-col class=\"figure\" :default-sort = \"{prop: 'sentiment', order: 'descending'}\" :span=\"15\">\n            <el-table :data=\"tableData1\" stripe height=\"250\" border style=\"width: 100%\">\n                <el-table-column prop=\"electorate\" label=\"Electorate\" width=\"180\"> </el-table-column>\n                <el-table-column prop=\"party1\" label=\"2019 Party\" width=\"180\"> </el-table-column>\n                <el-table-column prop=\"party2\" label=\"2022 Party\" width=\"180\"> </el-table-column>\n                <el-table-column prop=\"vote\" label=\"2022 Vote\" width=\"180\"> </el-table-column>\n                <el-table-column prop=\"sentiment\" label=\"Sentiment\" sortable width=\"180\"> </el-table-column>\n            </el-table>\n          </el-col>\n          <el-col class=\"filter\" :span=\"6\">\n            <div class=\"filter1\"> \n                  <div class=\"filter1label\"> Interval:</div>\n                  <el-select v-model=\"interval\" :change=\"handleClick()\" >\n                  <el-option\n                    v-for=\"item in options\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\">\n                  </el-option>\n                </el-select>\n                </div>\n          </el-col>\n        </el-row>\n        <el-row class=\"scatter2\">\n          <el-col class=\"figure\" :span=\"15\">\n            <!-- <div class=\"c scatter\" ref=\"scatterchart\" ></div> -->\n          </el-col>\n          <el-col class=\"filter\" :span=\"6\">\n            <el-row>\n              <div class=\"filter1\"> \n                  <div class=\"filter1label\"> Time After Election:</div>\n                  <el-select v-model=\"after\" :change=\"handleClick()\" >\n                  <el-option\n                    v-for=\"item in options2\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\">\n                  </el-option>\n                </el-select>\n                </div>\n            </el-row>\n            <el-row>\n              <div class=\"description\">\n                  <div style=\"font-size:20px;font-weight:600;margin-top:10px;margin-left:10px;color:#cb7f67;\">About Figure:</div> <br/>\n                  <div style=\"margin:10px;margin-top:0px;color:#fff;\">{{description}}</div>\n              </div>\n            </el-row>\n          </el-col>\n        </el-row>\n      </el-col>\n       \n    </div>\n   \n    \n</template>\n<script>\nimport echarts from 'echarts';\nimport { getNoParam, getParam, postParam } from '../../api/test'\n\nexport default {\n  name: \"distribution\",\n  data() {\n      return {\n       //table1 data\n       tableData1: [{\n          electorate: 'Eleborate1',\n          party1: 'LP',\n          party2: 'ALP',\n          vote:'56%',\n          sentiment: 76\n        }, {\n          electorate: 'Eleborate2',\n          party1: 'LP',\n          party2: 'GRN',\n          vote:'76%',\n          sentiment: 34\n        }, {\n          electorate: 'Eleborate3',\n          party1: 'IND',\n          party2: 'ALP',\n          vote:'45%',\n          sentiment: -34\n        }, {\n          electorate: 'Eleborate4',\n          party1: 'XEN',\n          party2: 'NP',\n          vote:'78%',\n          sentiment: 5\n        },{\n          electorate: 'Eleborate5',\n          party1: 'KAP',\n          party2: 'LNP',\n          vote:'67%',\n          sentiment: -89\n        }],\n\n        //table2 data\n        \n      }\n    },\n\n  mounted() {\n    \n  },\n\n  methods: {\n\n    handleClick() {\n      this.updateData();\n\n    },\n    updateData(){\n        if (this.sentiment==='positive'){\n             this.primary= 800,\n             this.secondary= 1000,\n             this.college= 300,\n             this.total= 800000\n        }\n        else{\n            this.primary= 2800,\n            this.secondary= 31000,\n            this.college= 5300,\n            this.total= 8300000\n        }\n    },\n   \n    \n  },\n};\n</script>\n<style>\n  .el-menu-vertical-demo{\n    height:100vh;\n  }\n  .scatter1{\n    height: 30em;\n    display:flex;\n    background-color: #5f4848;\n    justify-content:center;\n    align-items: center;\n    border-bottom:0.1em solid #fff;\n  }\n  .scatter2{\n    height: 30em;\n    background-color: #444a5b;\n    display:flex;\n    justify-content:center;\n    align-items: center;\n  }\n  .figure{\n    height: 80%;\n    width:65%;\n    border: 0.5em solid #cb7f67;\n    background-color: #fff;\n  }\n  .c{\n    margin: 10px;\n    height:100%;\n    width:100%;\n  }\n  .filter1{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n  .filter1label{\n    color:#cb7f67;\n    font-weight: 600;\n    font-size: 20px;\n    margin-bottom: 10px;\n  }\n  .scatter{\n    height:95%;\n    width:98%;\n  }\n  .description{\n    height:220px;\n    width:90%;\n    margin-left: 30px;\n    margin-top:30px;\n    background-color:#5f4848;\n    border:0.5em solid#cb7f67;\n  }\n</style>\n\n"],"mappings":"AA4EA,OAAAA,OAAA;AACA,SAAAC,UAAA,EAAAC,QAAA,EAAAC,SAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACA;MACAC,UAAA;QACAC,UAAA;QACAC,MAAA;QACAC,MAAA;QACAC,IAAA;QACAC,SAAA;MACA;QACAJ,UAAA;QACAC,MAAA;QACAC,MAAA;QACAC,IAAA;QACAC,SAAA;MACA;QACAJ,UAAA;QACAC,MAAA;QACAC,MAAA;QACAC,IAAA;QACAC,SAAA;MACA;QACAJ,UAAA;QACAC,MAAA;QACAC,MAAA;QACAC,IAAA;QACAC,SAAA;MACA;QACAJ,UAAA;QACAC,MAAA;QACAC,MAAA;QACAC,IAAA;QACAC,SAAA;MACA;;MAEA;IAEA;EACA;;EAEAC,QAAA,GAEA;EAEAC,OAAA;IAEAC,YAAA;MACA,KAAAC,UAAA;IAEA;IACAA,WAAA;MACA,SAAAJ,SAAA;QACA,KAAAK,OAAA,QACA,KAAAC,SAAA,SACA,KAAAC,OAAA,QACA,KAAAC,KAAA;MACA,OACA;QACA,KAAAH,OAAA,SACA,KAAAC,SAAA,UACA,KAAAC,OAAA,SACA,KAAAC,KAAA;MACA;IACA;EAGA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}