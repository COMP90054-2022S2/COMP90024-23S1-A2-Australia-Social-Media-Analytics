{"ast":null,"code":"import echarts from \"echarts\";\nimport { getNoParam, getParam, postParam } from '../../api/test';\nexport default {\n  name: \"distribution\",\n  data() {\n    return {};\n  },\n  mounted() {\n    this.loadEcharts();\n  },\n  watch: {\n    chartData: function (value) {\n      this.loadEcharts();\n    }\n  },\n  methods: {\n    loadEcharts() {\n      // chart1:\n      const options = {};\n\n      // let mychart = echarts.init(this.$refs.chart)\n      // mychart.setOption(options)\n      // let mychart2 = echarts.init(this.$refs.chart2)\n      // mychart2.setOption(options2)\n    },\n\n    handleClick() {\n      // console.log(this.sentiment)\n      // this.updateData();\n      // this.updateChart();\n    },\n    updateData() {\n      if (this.sentiment === 'positive') {\n        this.primary = 800, this.secondary = 1000, this.college = 300, this.total = 800000;\n      } else {\n        this.primary = 2800, this.secondary = 31000, this.college = 5300, this.total = 8300000;\n      }\n    },\n    updateChart() {\n      if (this.sentiment === 'all') {\n        this.chartData = [1, 2, 3, 4, 5, 6, 7];\n      } else if (this.sentiment === 'positive') {\n        this.chartData = [22, 23, 54, 65, 56, 232, 21];\n      } else {\n        this.chartData = [7, 6, 5, 4, 3, 2, 1];\n      }\n    }\n  }\n};","map":{"version":3,"names":["echarts","getNoParam","getParam","postParam","name","data","mounted","loadEcharts","watch","chartData","value","methods","options","handleClick","updateData","sentiment","primary","secondary","college","total","updateChart"],"sources":["src/views/dashboard/Distribution.vue"],"sourcesContent":["<template>\n    <div id=\"app\">  \n      <el-col class=\"menu\" :span=\"4\">\n         <el-menu\n            default-active=\"distribution\"\n            class=\"el-menu-vertical-demo\"\n            background-color=\"#666\"\n            text-color=\"#fff\"\n            active-text-color=\"#ffd04b\">\n            <el-menu-item index=\"distribution\">\n              <span slot=\"title\">Distribution</span>\n            </el-menu-item>\n            <el-menu-item index=\"ranking\">\n              <span slot=\"title\">Ranking</span>\n            </el-menu-item>\n          </el-menu>\n          <router-view/>\n      </el-col>\n   \n    </div>\n   \n    \n</template>\n<script>\nimport echarts from \"echarts\"\nimport { getNoParam, getParam, postParam } from '../../api/test'\n\nexport default {\n  name: \"distribution\",\n  data() {\n      return {\n       \n\n      }\n    },\n\n  mounted() {\n    this.loadEcharts()\n  },\n  watch: {\n    chartData: function(value) {\n      this.loadEcharts()\n    }\n  },\n\n  methods: {\n\n    loadEcharts() {\n      // chart1:\n        const options = {\n     \n      };\n\n      // let mychart = echarts.init(this.$refs.chart)\n      // mychart.setOption(options)\n      // let mychart2 = echarts.init(this.$refs.chart2)\n      // mychart2.setOption(options2)\n    },\n\n    handleClick() {\n      // console.log(this.sentiment)\n      // this.updateData();\n      // this.updateChart();\n\n    },\n    updateData(){\n        if (this.sentiment==='positive'){\n             this.primary= 800,\n             this.secondary= 1000,\n             this.college= 300,\n             this.total= 800000\n        }\n        else{\n            this.primary= 2800,\n            this.secondary= 31000,\n            this.college= 5300,\n            this.total= 8300000\n        }\n    },\n   \n    updateChart() {\n        if (this.sentiment === 'all') {\n        this.chartData = [1,2,3,4,5,6,7]\n      } else if (this.sentiment === 'positive') {\n        this.chartData = [22, 23, 54,65, 56, 232, 21]\n      } else {\n        this.chartData = [7,6,5,4,3,2,1]\n      }\n    },\n  },\n};\n</script>\n<style>\n   \n    \n</style>\n\n"],"mappings":"AAwBA,OAAAA,OAAA;AACA,SAAAC,UAAA,EAAAC,QAAA,EAAAC,SAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA,QAGA;EACA;EAEAC,QAAA;IACA,KAAAC,WAAA;EACA;EACAC,KAAA;IACAC,SAAA,WAAAA,CAAAC,KAAA;MACA,KAAAH,WAAA;IACA;EACA;EAEAI,OAAA;IAEAJ,YAAA;MACA;MACA,MAAAK,OAAA,IAEA;;MAEA;MACA;MACA;MACA;IACA;;IAEAC,YAAA;MACA;MACA;MACA;IAAA,CAEA;IACAC,WAAA;MACA,SAAAC,SAAA;QACA,KAAAC,OAAA,QACA,KAAAC,SAAA,SACA,KAAAC,OAAA,QACA,KAAAC,KAAA;MACA,OACA;QACA,KAAAH,OAAA,SACA,KAAAC,SAAA,UACA,KAAAC,OAAA,SACA,KAAAC,KAAA;MACA;IACA;IAEAC,YAAA;MACA,SAAAL,SAAA;QACA,KAAAN,SAAA;MACA,gBAAAM,SAAA;QACA,KAAAN,SAAA;MACA;QACA,KAAAA,SAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}